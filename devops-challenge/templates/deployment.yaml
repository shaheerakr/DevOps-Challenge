apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "devops-challenge.fullname" . }}
  labels:
    app: {{ include "devops-challenge.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "devops-challenge.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "devops-challenge.name" . }}
    spec:
      containers:
        - name: {{ include "devops-challenge.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          env:
            # Non-sensitive environment variables
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            # Sensitive environment variables from Secret
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: redis-config
                  key: host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-config
                  key: port
            - name: REDIS_DB
              valueFrom:
                secretKeyRef:
                  name: redis-config
                  key: db
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 10
            periodSeconds: 30
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
